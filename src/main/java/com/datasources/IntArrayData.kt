package com.datasources

/* This class holds the IntArrays that will be used to test the QuickSort implementations in Functional.kt and
*  ObjectOriented.kt. Storing the Arrays in one class means there will be no inconsistencies between both tests */

class IntArrayData {
    companion object {
        fun getArrayOfLength100() : IntArray {
            return intArrayOf(  388, 85, 1468, 1487, 92, 1621, 1332, 309, 154, 1706,
                                1769, 848, 1324, 1444, 1098, 1550, 583, 1178, 773, 1741,
                                1325, 1552, 1779, 464, 1395, 571, 1470, 311, 1675, 95,
                                1797, 1226, 512, 1207, 771, 1452, 291, 931, 481, 1232,
                                1352, 1763, 1924, 686, 927, 1332, 1120, 1821, 474, 1170,
                                1045, 591, 577, 1141, 109, 1613, 1517, 508, 195, 1509,
                                362, 342, 1379, 828, 109, 412, 160, 1808, 400, 410,
                                1674, 900, 1379, 135, 1007, 1898, 819, 172, 211, 1754,
                                504, 589, 688, 150, 1312, 1571, 1225, 1333, 587, 1633,
                                1241, 197, 941, 96, 197, 379, 385, 31, 1921, 871)
        }

        fun getArrayOfLength200() : IntArray {
            return intArrayOf(  1453, 844, 316, 418, 383, 1139, 1679, 1622, 664, 611,
                                695, 621, 1376, 1415, 1730, 1024, 1911, 241, 79, 1154,
                                1209, 1270, 888, 1964, 1834, 1289, 268, 1956, 1666, 1382,
                                898, 764, 1969, 144, 1455, 438, 1101, 1691, 412, 1380,
                                1927, 179, 1360, 946, 472, 1097, 960, 1020, 392, 1552,
                                451, 1185, 361, 266, 1447, 1784, 996, 247, 1185, 1383,
                                923, 647, 257, 12, 1460, 1541, 1346, 1209, 1068, 723,
                                507, 1759, 1656, 1206, 1600, 1186, 1130, 1422, 531, 1701,
                                1065, 312, 1604, 1255, 1873, 1428, 28, 617, 517, 1017,
                                769, 1799, 112, 406, 270, 1679, 1649, 1266, 1579, 1116,
                                1141, 267, 44, 975, 1398, 704, 276, 1543, 1240, 603,
                                972, 1063, 176, 839, 110, 1087, 810, 1073, 975, 712,
                                623, 1669, 1388, 377, 1539, 1580, 466, 1558, 337, 1394,
                                343, 1083, 1446, 629, 1514, 918, 13, 431, 1820, 229,
                                1600, 1991, 1145, 1296, 975, 476, 1299, 724, 20, 1196,
                                357, 1769, 1540, 1477, 1306, 46, 1199, 696, 436, 917,
                                766, 486, 1911, 392, 711, 1492, 1345, 1187, 1503, 1557,
                                1340, 280, 1216, 1380, 602, 227, 1569, 117, 112, 1324,
                                825, 963, 188, 1995, 639, 28, 1822, 979, 1160, 421,
                                1725, 1356, 1441, 1933, 586, 1464, 798, 140, 743, 648)
        }

        fun getArrayOfLength300() : IntArray {
            return intArrayOf(  1016, 1033, 972, 1909, 1790, 1940, 1868, 757, 1549, 1277,
                                1066, 1413, 1463, 559, 534, 564, 1950, 287, 172, 99,
                                274, 793, 1580, 716, 1206, 1341, 1654, 588, 1294, 1509,
                                1511, 1124, 1433, 1945, 1585, 392, 359, 848, 184, 1061,
                                1284, 303, 1201, 1904, 602, 1186, 1722, 60, 1544, 711,
                                1325, 1630, 87, 1564, 1227, 1638, 527, 1712, 864, 1087,
                                359, 1593, 194, 762, 1792, 1735, 1935, 552, 1439, 188,
                                1001, 1318, 1171, 324, 1504, 960, 1167, 1680, 1143, 1264,
                                1057, 494, 422, 722, 1844, 1111, 1265, 910, 532, 370,
                                881, 1029, 1828, 1586, 319, 199, 1370, 200, 381, 1622,
                                1926, 1206, 1798, 559, 266, 545, 1372, 1936, 312, 1694,
                                760, 472, 988, 680, 1625, 1740, 1664, 433, 1730, 1594,
                                1643, 605, 1844, 1151, 430, 963, 1512, 1272, 1504, 1223,
                                658, 432, 324, 189, 749, 969, 420, 853, 51, 1864,
                                425, 87, 1205, 1815, 1704, 170, 1093, 1544, 1007, 230,
                                995, 202, 1892, 1234, 677, 588, 1953, 677, 667, 1119,
                                1081, 1688, 1358, 1487, 1187, 1463, 287, 1274, 1271, 325,
                                1803, 346, 1760, 1038, 1727, 795, 668, 326, 785, 719,
                                290, 326, 621, 614, 826, 706, 908, 265, 960, 1116,
                                1612, 1045, 450, 741, 682, 1847, 1931, 9, 973, 1165,
                                1323, 1538, 463, 1100, 315, 430, 467, 408, 1766, 1282,
                                191, 1323, 1724, 315, 1327, 309, 443, 1631, 735, 519,
                                1407, 1669, 1946, 794, 1191, 738, 996, 56, 1559, 1723,
                                620, 368, 309, 1586, 442, 1678, 442, 1764, 447, 1959,
                                1648, 1799, 1231, 182, 1012, 1407, 1957, 423, 1779, 1191,
                                366, 1354, 542, 1353, 202, 197, 1272, 304, 1721, 1504,
                                1922, 1583, 290, 483, 1123, 283, 1127, 967, 441, 369,
                                90, 290, 925, 438, 161, 1548, 439, 1991, 780, 1173,
                                1572, 1158, 1125, 1234, 389, 863, 1981, 307, 623, 651,
                                1402, 152, 1417, 503, 791, 1275, 960, 1488, 1204, 1881)
        }
    }
}